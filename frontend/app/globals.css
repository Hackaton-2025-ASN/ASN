@tailwind base;
@tailwind components;
@tailwind utilities;

:root {
  /* Light mode (default) - changing from pure white to a soft light color */
  --foreground-rgb: 30, 30, 30;
  --background-start-rgb: 250, 250, 252; /* Slightly off-white with a hint of purple */
  --background-end-rgb: 245, 245, 250; /* Slightly off-white with a hint of purple */
  --primary-color: 139, 92, 246; /* Purple-500 */
  --primary-light: 196, 181, 253; /* Purple-300 */
  --primary-dark: 109, 40, 217; /* Purple-700 */
  --card-bg: 255, 255, 255;
  --card-border: 237, 233, 254;
  --text-primary: 30, 30, 30;
  --text-secondary: 107, 114, 128;
  --accent-light: 243, 238, 255;
  --gray-light: 249, 250, 251;
  --gray-medium: 229, 231, 235;
  --button-text-light: 0, 0, 0; /* Black text for buttons in light mode */
  --button-text-dark: 255, 255, 255; /* White text for buttons in dark mode */
}

.dark {
  /* Dark mode */
  --foreground-rgb: 255, 255, 255;
  --background-start-rgb: 0, 0, 0;
  --background-end-rgb: 0, 0, 0;
  --primary-color: 139, 92, 246; /* Purple-500 */
  --primary-light: 196, 181, 253; /* Purple-300 */
  --primary-dark: 109, 40, 217; /* Purple-700 */
  --card-bg: 20, 20, 20;
  --card-border: 50, 50, 50;
  --text-primary: 255, 255, 255;
  --text-secondary: 180, 180, 180;
  --accent-light: 30, 30, 60;
  --gray-light: 30, 30, 30;
  --gray-medium: 50, 50, 50;
  --button-text-light: 0, 0, 0; /* Black text for buttons in light mode */
  --button-text-dark: 255, 255, 255; /* White text for buttons in dark mode */
}

body {
  color: rgb(var(--text-primary));
  background: rgb(var(--background-start-rgb));
}

/* Animation Keyframes */
@keyframes float {
  0% {
    transform: translateY(0px);
  }
  50% {
    transform: translateY(-10px);
  }
  100% {
    transform: translateY(0px);
  }
}

@keyframes pulse-glow {
  0% {
    opacity: 0.5;
    transform: scale(1);
  }
  50% {
    opacity: 0.8;
    transform: scale(1.05);
  }
  100% {
    opacity: 0.5;
    transform: scale(1);
  }
}

@keyframes gradient-shift {
  0% {
    background-position: 0% 50%;
  }
  50% {
    background-position: 100% 50%;
  }
  100% {
    background-position: 0% 50%;
  }
}

@keyframes fade-in {
  0% {
    opacity: 0;
    transform: translateY(20px);
  }
  100% {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes loading-bar {
  0% {
    width: 0%;
    opacity: 0.5;
  }
  50% {
    opacity: 1;
  }
  100% {
    width: 100%;
    opacity: 0.5;
  }
}

@keyframes node-pulse {
  0% {
    transform: scale(1);
    opacity: 0.7;
  }
  50% {
    transform: scale(1.2);
    opacity: 1;
  }
  100% {
    transform: scale(1);
    opacity: 0.7;
  }
}

@keyframes connection-pulse {
  0% {
    opacity: 0.1;
  }
  50% {
    opacity: 0.5;
  }
  100% {
    opacity: 0.1;
  }
}

@keyframes data-flow {
  0% {
    transform: translateX(0) scale(0.5);
    opacity: 0;
  }
  50% {
    opacity: 1;
    transform: translateX(50%) scale(1);
  }
  100% {
    transform: translateX(100%) scale(0.5);
    opacity: 0;
  }
}

@keyframes grid-move {
  0% {
    background-position: 0 0;
  }
  100% {
    background-position: 50px 50px;
  }
}

@keyframes shimmer {
  0% {
    transform: translateX(-100%);
  }
  100% {
    transform: translateX(100%);
  }
}

/* Custom Animation Classes */
.animate-float {
  animation: float 6s ease-in-out infinite;
}

.animate-float-delay {
  animation: float 7s ease-in-out 1s infinite;
}

.animate-float-delay-long {
  animation: float 8s ease-in-out 2s infinite;
}

.animate-pulse-slow {
  animation: pulse-glow 4s ease-in-out infinite;
}

.animate-gradient {
  background-size: 200% 200%;
  animation: gradient-shift 4s ease infinite;
}

.animate-fade-in {
  animation: fade-in 1s ease-out forwards;
}

.animate-fade-in-delay {
  animation: fade-in 1s ease-out 0.3s forwards;
  opacity: 0;
}

.animate-fade-in-up {
  animation: fade-in 1s ease-out forwards;
}

.animation-delay-300 {
  animation-delay: 300ms;
}

.animation-delay-600 {
  animation-delay: 600ms;
}

.animate-loading {
  position: relative;
  overflow: hidden;
}

.animate-loading::after {
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  height: 100%;
  width: 100%;
  background: linear-gradient(90deg, transparent, rgba(139, 92, 246, 0.2), transparent);
  animation: loading-bar 2s infinite;
}

/* Neural Network Animation */
.neural-network {
  position: absolute;
  width: 100%;
  height: 100%;
  overflow: hidden;
}

.node {
  position: absolute;
  width: 12px;
  height: 12px;
  border-radius: 50%;
  background: #8b5cf6;
  animation: node-pulse 3s infinite;
}

.node-1 {
  top: 20%;
  left: 20%;
  animation-delay: 0s;
}

.node-2 {
  top: 30%;
  left: 70%;
  animation-delay: 0.5s;
}

.node-3 {
  top: 70%;
  left: 30%;
  animation-delay: 1s;
}

.node-4 {
  top: 60%;
  left: 80%;
  animation-delay: 1.5s;
}

.node-5 {
  top: 40%;
  left: 40%;
  animation-delay: 2s;
}

.node-6 {
  top: 80%;
  left: 60%;
  animation-delay: 2.5s;
}

.connection {
  position: absolute;
  height: 2px;
  background: linear-gradient(90deg, #8b5cf6, #a78bfa);
  animation: connection-pulse 3s infinite;
  transform-origin: left center;
}

.connection-1 {
  top: 22%;
  left: 22%;
  width: 48%;
  transform: rotate(30deg);
  animation-delay: 0.2s;
}

.connection-2 {
  top: 32%;
  left: 72%;
  width: 40%;
  transform: rotate(-60deg);
  animation-delay: 0.7s;
}

.connection-3 {
  top: 72%;
  left: 32%;
  width: 50%;
  transform: rotate(20deg);
  animation-delay: 1.2s;
}

.connection-4 {
  top: 62%;
  left: 82%;
  width: 30%;
  transform: rotate(-120deg);
  animation-delay: 1.7s;
}

.connection-5 {
  top: 42%;
  left: 42%;
  width: 35%;
  transform: rotate(-30deg);
  animation-delay: 2.2s;
}

.connection::after {
  content: "";
  position: absolute;
  top: -2px;
  left: 0;
  width: 8px;
  height: 6px;
  border-radius: 50%;
  background: #8b5cf6;
  animation: data-flow 3s infinite;
}

/* Grid Animation */
.grid-animation {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-image: linear-gradient(rgba(139, 92, 246, 0.1) 1px, transparent 1px),
    linear-gradient(90deg, rgba(139, 92, 246, 0.1) 1px, transparent 1px);
  background-size: 50px 50px;
  animation: grid-move 20s linear infinite;
  opacity: 0.2;
}

.dark .grid-animation {
  opacity: 0.2;
}

.light .grid-animation {
  opacity: 0.03;
  background-image: linear-gradient(rgba(139, 92, 246, 0.1) 1px, transparent 1px),
    linear-gradient(90deg, rgba(139, 92, 246, 0.1) 1px, transparent 1px);
}

.animate-shimmer {
  animation: shimmer 2s infinite;
}

/* Simplified Light Mode Styles - No Shadows */
.light .bg-black {
  background-color: rgb(var(--background-start-rgb)) !important;
}

.light .text-white {
  color: rgb(var(--text-primary)) !important;
}

.light .text-gray-400 {
  color: rgb(var(--text-secondary)) !important;
}

.light .text-gray-300 {
  color: rgb(80, 80, 80) !important;
}

.light .text-gray-200 {
  color: rgb(60, 60, 60) !important;
}

/* Remove all shadows in light mode */
.light .shadow-lg,
.light .shadow-md,
.light .shadow-sm,
.light .shadow {
  box-shadow: none !important;
}

.light .blur,
.light .blur-xl,
.light .blur-lg,
.light .blur-md,
.light .blur-sm {
  filter: none !important;
}

/* Flat card backgrounds */
.light .bg-gray-900\/50,
.light .bg-black\/80,
.light .bg-black\/60,
.light .bg-black\/30 {
  background-color: rgb(var(--card-bg)) !important;
  box-shadow: none !important;
}

/* Simplified borders */
.light .border-gray-800,
.light .border-gray-700 {
  border-color: rgb(var(--gray-medium)) !important;
}

/* Flat backgrounds */
.light .bg-gray-800\/50,
.light .bg-gray-800,
.light .bg-black\/30 {
  background-color: rgb(var(--gray-light)) !important;
}

/* Remove gradients */
.light .from-gray-900,
.light .via-black,
.light .to-black,
.light .from-gray-100,
.light .to-gray-200,
.light .to-white {
  background: rgb(var(--background-start-rgb)) !important;
  background-image: none !important;
}

/* Simplified hover states */
.light .hover\:bg-gray-800:hover,
.light .hover\:bg-gray-800\/50:hover,
.light .hover\:bg-gray-900:hover {
  background-color: rgb(var(--gray-medium)) !important;
}

.light .bg-gray-900 {
  background-color: rgb(var(--card-bg)) !important;
}

.light .bg-gray-200 {
  background-color: rgb(var(--gray-light)) !important;
}

.light .text-gray-900 {
  color: rgb(var(--text-primary)) !important;
}

.light .text-gray-600 {
  color: rgb(var(--text-secondary)) !important;
}

/* Purple accent colors - consistent in both themes */
.light .bg-primary\/20,
.dark .bg-primary\/20 {
  background-color: rgba(139, 92, 246, 0.1) !important;
}

.light .text-primary,
.dark .text-primary {
  color: rgb(139, 92, 246) !important;
}

.light .from-primary,
.dark .from-primary {
  --tw-gradient-from: rgb(139, 92, 246) !important;
}

.light .to-purple-600,
.dark .to-purple-600 {
  --tw-gradient-to: rgb(124, 58, 237) !important;
}

.light .bg-primary,
.dark .bg-primary {
  background-color: rgb(139, 92, 246) !important;
}

.light .hover\:bg-primary\/90:hover,
.dark .hover\:bg-primary\/90:hover {
  background-color: rgba(139, 92, 246, 0.9) !important;
}

.light .border-primary,
.dark .border-primary {
  border-color: rgb(139, 92, 246) !important;
}

.light .hover\:border-primary\/50:hover,
.dark .hover\:border-primary\/50:hover {
  border-color: rgba(139, 92, 246, 0.5) !important;
}

.light .hover\:bg-primary\/20:hover,
.dark .hover\:bg-primary\/20:hover {
  background-color: rgba(139, 92, 246, 0.1) !important;
}

.light .hover\:text-primary:hover,
.dark .hover\:text-primary:hover {
  color: rgb(139, 92, 246) !important;
}

/* Remove gradient effects */
.light .from-primary\/20,
.light .to-purple-600\/20 {
  background: transparent !important;
}

/* Specific overrides for better light mode appearance */
.light .bg-gradient-to-b.from-gray-900.to-black {
  background: rgb(var(--card-bg)) !important;
  border: 1px solid rgb(var(--gray-medium)) !important;
}

.light .bg-black\/60.border.border-gray-800 {
  background-color: rgb(var(--card-bg)) !important;
  border-color: rgb(var(--gray-medium)) !important;
}

.light .border-t.border-gray-800 {
  border-color: rgb(var(--gray-medium)) !important;
}

/* Remove glow effects in light mode */
.light .animate-pulse,
.light .animate-pulse-slow {
  animation: none !important;
}

/* Remove absolute inset styling that creates glow effects */
.light .absolute.-inset-1,
.light .absolute.-inset-0.5 {
  display: none !important;
}

/* Simplify card styling in light mode */
.light .card,
.light .rounded-lg,
.light .rounded-xl {
  box-shadow: none !important;
  border: 1px solid rgb(var(--gray-medium)) !important;
}

/* Button text color in light mode */
.light .bg-primary .text-white,
.light .bg-primary .relative.z-10,
.light .bg-primary span,
.light .bg-primary\/90 .text-white,
.light .bg-primary\/90 .relative.z-10,
.light .bg-primary\/90 span,
.light button.bg-primary span,
.light button.bg-primary\/90 span {
  color: rgb(var(--button-text-light)) !important;
}

/* Ensure login/register buttons have black text in light mode */
.light a[href="/login"] button span,
.light a[href="/register"] button span {
  color: rgb(var(--button-text-light)) !important;
}

/* Dark mode buttons should have white text */
.dark .bg-primary .text-white,
.dark .bg-primary .relative.z-10,
.dark .bg-primary span,
.dark .bg-primary\/90 .text-white,
.dark .bg-primary\/90 .relative.z-10,
.dark .bg-primary\/90 span,
.dark button.bg-primary span,
.dark button.bg-primary\/90 span {
  color: rgb(var(--button-text-dark)) !important;
}

.dark a[href="/login"] button span,
.dark a[href="/register"] button span {
  color: rgb(var(--button-text-dark)) !important;
}

